{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pg_net Documentation : https://supabase.github.io/pg_net Source Code : https://github.com/supabase/pg_net A PostgreSQL extension providing an async networking interface accessible via SQL using a background worker and curl.","title":"Welcome"},{"location":"#pg_net","text":"Documentation : https://supabase.github.io/pg_net Source Code : https://github.com/supabase/pg_net A PostgreSQL extension providing an async networking interface accessible via SQL using a background worker and curl.","title":"pg_net"},{"location":"api/","text":"HTTP net.http_get description Create an HTTP GET request returning the request's uuid id. signature 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 net . http_get ( -- url for the request url text , -- key/value pairs to be url encoded and appended to the `url` params jsonb DEFAULT '{}' :: jsonb , -- key/values to be included in request headers headers jsonb DEFAULT '{}' :: jsonb , -- the maximum number of milliseconds the request may take before being cancelled timeout_milliseconds int DEFAULT 1000 , -- the minimum amount of time the response should be persisted ttl interval default '3 days' , -- when `true`, return immediately. when `false` wait for the request to complete before returning async bool default true ) -- request_id reference returns uuid strict volatile parallel safe language plpgsql usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 -- Async begin ; with request as ( select net . http_get ( 'http://supabase.io' , async : = true ) as id ) select net . http_collect_response ( id ) from request ; http_collect_response ----------------------- ( 1 row ) rollback ; -- Sync -- begin; -- with request as ( -- select net.http_get('http://supabase.io', async:=false) as id -- ) -- select -- net.http_collect_response(id) -- from -- request; -- rollback; net.http_collect_response description Given a request_id reference, retrieve the response. When async:=false is set it is recommended that statement_timeout is set for the maximum amount of time the caller is willing to wait in case the response is slow to populate. signature 1 2 3 4 5 6 7 8 9 10 11 net . http_collect_response ( -- request_id reference request_id uuid , -- when `true`, return immediately. when `false` wait for the request to complete before returning async bool default true ) -- http response composite type returns net . http_response strict volatile parallel safe usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 begin ; with req as ( select net . http_get ( 'https://supabase.io' , async : = true ) as id ) select net . http_collect_response ( id , async : = true ) from req ; http_collect_response ----------------------- ( 1 row ) rollback ; net.http_cancel_request description Given a request_id reference, cancel the request. If the request was already completed, its result will no longer be retrievable. signature 1 2 3 4 5 6 7 8 9 net . http_cancel_request ( -- request_id reference request_id uuid ) -- request_id reference returns uuid strict volatile parallel safe description Given an id produced from calling an async_get / async_post /etc, cancel the request. If the request was already completed, its result will no longer be retrievable. usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 begin ; with req as ( select net . http_get ( 'https://supabase.io' ) as id ) select net . http_cancel_request ( id ) is not null from req ; ? column ? ---------- t ( 1 row ) rollback ; SMTP Coming soon","title":"API Reference"},{"location":"api/#http","text":"","title":"HTTP"},{"location":"api/#nethttp_get","text":"","title":"net.http_get"},{"location":"api/#description","text":"Create an HTTP GET request returning the request's uuid id.","title":"description"},{"location":"api/#signature","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 net . http_get ( -- url for the request url text , -- key/value pairs to be url encoded and appended to the `url` params jsonb DEFAULT '{}' :: jsonb , -- key/values to be included in request headers headers jsonb DEFAULT '{}' :: jsonb , -- the maximum number of milliseconds the request may take before being cancelled timeout_milliseconds int DEFAULT 1000 , -- the minimum amount of time the response should be persisted ttl interval default '3 days' , -- when `true`, return immediately. when `false` wait for the request to complete before returning async bool default true ) -- request_id reference returns uuid strict volatile parallel safe language plpgsql","title":"signature"},{"location":"api/#usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 -- Async begin ; with request as ( select net . http_get ( 'http://supabase.io' , async : = true ) as id ) select net . http_collect_response ( id ) from request ; http_collect_response ----------------------- ( 1 row ) rollback ; -- Sync -- begin; -- with request as ( -- select net.http_get('http://supabase.io', async:=false) as id -- ) -- select -- net.http_collect_response(id) -- from -- request; -- rollback;","title":"usage"},{"location":"api/#nethttp_collect_response","text":"","title":"net.http_collect_response"},{"location":"api/#description_1","text":"Given a request_id reference, retrieve the response. When async:=false is set it is recommended that statement_timeout is set for the maximum amount of time the caller is willing to wait in case the response is slow to populate.","title":"description"},{"location":"api/#signature_1","text":"1 2 3 4 5 6 7 8 9 10 11 net . http_collect_response ( -- request_id reference request_id uuid , -- when `true`, return immediately. when `false` wait for the request to complete before returning async bool default true ) -- http response composite type returns net . http_response strict volatile parallel safe","title":"signature"},{"location":"api/#usage_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 begin ; with req as ( select net . http_get ( 'https://supabase.io' , async : = true ) as id ) select net . http_collect_response ( id , async : = true ) from req ; http_collect_response ----------------------- ( 1 row ) rollback ;","title":"usage"},{"location":"api/#nethttp_cancel_request","text":"","title":"net.http_cancel_request"},{"location":"api/#description_2","text":"Given a request_id reference, cancel the request. If the request was already completed, its result will no longer be retrievable.","title":"description"},{"location":"api/#signature_2","text":"1 2 3 4 5 6 7 8 9 net . http_cancel_request ( -- request_id reference request_id uuid ) -- request_id reference returns uuid strict volatile parallel safe","title":"signature"},{"location":"api/#description_3","text":"Given an id produced from calling an async_get / async_post /etc, cancel the request. If the request was already completed, its result will no longer be retrievable.","title":"description"},{"location":"api/#usage_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 begin ; with req as ( select net . http_get ( 'https://supabase.io' ) as id ) select net . http_cancel_request ( id ) is not null from req ; ? column ? ---------- t ( 1 row ) rollback ;","title":"usage"},{"location":"api/#smtp","text":"Coming soon","title":"SMTP"},{"location":"contributing/","text":"pg_netis OSS. PR and issues are welcome. Development Nix is required to set up the environment. Testing For testing locally, execute: 1 2 3 4 5 6 7 8 # might take a while in downloading all the dependencies $ nix-shell # test on pg 12 $ net-with-pg-12 make installcheck # test on pg 13 $ net-with-pg-13 make installcheck Documentation All public API must be documented. Building documentation requires python 3.6+ Install Dependencies Install mkdocs, themes, and extensions. 1 pip install -r docs/requirements_docs.txt Serving To serve the documentation locally run 1 mkdocs serve and visit the docs at http://127.0.0.1:8000/pg_net/","title":"Contributing"},{"location":"contributing/#development","text":"Nix is required to set up the environment.","title":"Development"},{"location":"contributing/#testing","text":"For testing locally, execute: 1 2 3 4 5 6 7 8 # might take a while in downloading all the dependencies $ nix-shell # test on pg 12 $ net-with-pg-12 make installcheck # test on pg 13 $ net-with-pg-13 make installcheck","title":"Testing"},{"location":"contributing/#documentation","text":"All public API must be documented. Building documentation requires python 3.6+","title":"Documentation"},{"location":"contributing/#install-dependencies","text":"Install mkdocs, themes, and extensions. 1 pip install -r docs/requirements_docs.txt","title":"Install Dependencies"},{"location":"contributing/#serving","text":"To serve the documentation locally run 1 mkdocs serve and visit the docs at http://127.0.0.1:8000/pg_net/","title":"Serving"},{"location":"installation/","text":"Tested to work on PostgreSQL 12 and 13. Setup Server Clone this repo and run 1 make && make install To make the extension available to the database add on postgresql.conf : 1 shared_preload_libraries = 'pg_net' Database To enable the extension in PostgreSQL we must execute a create extension statement. The extension creates its own schema/namespace named net to avoid naming conflicts. 1 create extension pg_net ;","title":"Installation"},{"location":"installation/#setup","text":"","title":"Setup"},{"location":"installation/#server","text":"Clone this repo and run 1 make && make install To make the extension available to the database add on postgresql.conf : 1 shared_preload_libraries = 'pg_net'","title":"Server"},{"location":"installation/#database","text":"To enable the extension in PostgreSQL we must execute a create extension statement. The extension creates its own schema/namespace named net to avoid naming conflicts. 1 create extension pg_net ;","title":"Database"}]}